package com.solbox.delivery.vm;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class RequestBody {
	static String VM() throws JSONException {
		JSONObject finalJsonObject = new JSONObject();
		JSONObject server = new JSONObject();
		JSONObject networks = new JSONObject();
		JSONObject block_device_mapping_v2 = new JSONObject();
		JSONArray jsonArray0 = new JSONArray();
		JSONArray jsonArray1 = new JSONArray();

		server.put("name", "test1");
		server.put("key_name", "ssh_yh");
		server.put("flavorRef", "61c68bc1-3a56-4827-9fd1-6a7929362bf6");
		server.put("availability_zone", "DX-M1");
		networks.put("uuid", "71655962-3e67-42d6-a17d-6ab61a435dfe");
		jsonArray0.put(networks);
		server.put("networks", jsonArray0);
		block_device_mapping_v2.put("destination_type", "volume");
		block_device_mapping_v2.put("boot_index", "0");
		block_device_mapping_v2.put("source_type", "image");
		block_device_mapping_v2.put("volume_size", 50);
		block_device_mapping_v2.put("uuid", "e49ea534-e4eb-47f7-b413-72a16a187aa8");
		jsonArray1.put(block_device_mapping_v2);
		server.put("block_device_mapping_v2", jsonArray1);
		finalJsonObject.put("server", server);

		return finalJsonObject.toString();
	}

	static String token() throws JSONException {
		JSONObject finalJsonObject = new JSONObject();
		JSONObject auth = new JSONObject();
		JSONObject identity = new JSONObject();
		JSONObject scope = new JSONObject();
		JSONObject password = new JSONObject();
		JSONObject user = new JSONObject();
		JSONObject domain = new JSONObject();
		JSONObject project = new JSONObject();
		JSONArray methods = new JSONArray();

		domain.put("id", "default");
		user.put("domain", domain);
		user.put("name", "infra.op@solbox.com");
		user.put("password", "xJd*Qv*cBXpd7qX");
		password.put("user", user);
		methods.put("password");
		identity.put("methods", methods);
		identity.put("password", password);
		project.put("name", "infra.op@solbox.com");
		project.put("domain", domain);
		scope.put("project", project);
		auth.put("scope", scope);
		auth.put("identity", identity);
		finalJsonObject.put("auth", auth);

		return finalJsonObject.toString();
	
	}
	
	
	static String volume() throws JSONException {
		JSONObject finalJsonObject = new JSONObject();
		JSONObject volume = new JSONObject();

		volume.put("snapshot_id", "69dfe9a7-75ee-41aa-ac3a-ab054006d49d");
		volume.put("bootable", false);
		volume.put("name", "test1");
		volume.put("usage_plan_type", "hourly");
		volume.put("size", 500);
		volume.put("availability_zone", "DX-M1");
		finalJsonObject.put("volume", volume);
		
		return finalJsonObject.toString();
	}
	
}
